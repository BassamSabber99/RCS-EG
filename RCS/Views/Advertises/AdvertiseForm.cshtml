@model RCS.viewModels.productViewModel
@{
    ViewBag.Title = "Make Advertise";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{ 
    var check = (Model.id == 0) ? "required" : "";
}
<div class="addproductPage wow fadeIn container p-4 border col-md-8" style="margin-top: 200px;">
    @using (Html.BeginForm("save", "Advertises", FormMethod.Post, new { @class = "p-4", role = "form" , id="add" , enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken();
        <p class="text-primary">Product Info</p>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr>
        <div class="form-group row">
            <div class="col-sm-10">
                @Html.HiddenFor(m => m.id, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.name, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.name, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.DepartmentID, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m=>m.DepartmentID, new SelectList(Model.Departments, "id", "depName"), "Choose Department", htmlAttributes: new { @class = "form-control form-control-sm" })
                @Html.ValidationMessageFor(m => m.DepartmentID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.CategoryID, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                <select class="form-control form-control-sm" id="CategoryID" name="CategoryID" required>
                    <option value>Choose Category</option>
                </select>
                @Html.ValidationMessageFor(m => m.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.description, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.description, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.ImagePath, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div id="InputImage" class="ml-5 mb-5">
                <div class="row">
                    <input type="file" id="ImageFile" name="ImageFile" multiple  @check>
                    @Html.ValidationMessageFor(m => m.ImageFile, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <p class="text-info">* Select All Images For This Item .</p>
                    <div id="imgs"></div>
                </div>
            </div>
            
            <!--
            <div class="col-sm-10">
                <button id="addimage" class="btn btn-outline-primary float-right" onclick="Generate(event)" role="button">Add Another Images</button>
            </div>
                -->
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.address, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.price, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-2">
                @Html.TextBoxFor(m => m.price, htmlAttributes: new { @class = "form-control col-sm-10", type = "number" })
                @Html.ValidationMessageFor(m => m.price, "", new { @class = "text-danger " })
            </div>
            <div class="col-sm-2">
                <span style="line-height: 36px;">EGP</span>
            </div>
        </div>
        <p class="text-primary">Owner Info</p>
        <hr>
        <div class="form-group row">
            @Html.LabelFor(m => m.ownerName, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ownerName, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.ownerPhone, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ownerPhone, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
        <div class="form-group row">
            @Html.LabelFor(m => m.ownerEmail, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ownerEmail, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
        <div class="form-group row ">
            @if (Model.id == 0)
            {
                <div class="col-sm-10">
                    <button type="submit" id="submit" class="btn btn-primary">Make Request</button>
                </div>
            }
            else
            {
                <div class="col-sm-10">
                    <button type="submit" id="submit" class="btn btn-primary">Update Request</button>
                </div>
            }

        </div>
    }
</div>
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        new WOW().init();
        $(document).ready(function () {

            $("#ImageFile").on("change", function () {
                console.log(this.files); 
                
            });
         
            $("#DepartmentID").val();
            $.ajax({
                method: "GET",
                url: "http://localhost:54302/api/department/getCategory?depid=" + $("#DepartmentID").val(),
                success: function (data) {
                    $("#CategoryID").empty();
                    $("#CategoryID").append(`<option value>.....</option>`);
                    for (i = 0 ; i < data.length; i++) {
                        var elem = `<option value=${data[i].id}>${data[i].catName}</option>`;
                        $("#CategoryID").append(elem);
                    }
                    $("#CategoryID").val('@Model.CategoryID');
                },
                error: function () {
                    $("#CategoryID").empty();
                    $("#CategoryID").append(`<option value>Choose Category</option>`);
                },
            });

            $("#price").on("change", function () {
                if ($(this).val() < 0) {
                    $(this).val("0");
                }
            })
           
            $("#DepartmentID").on("change", function () {
                $.ajax({
                    method:"GET",
                    url:"http://localhost:54302/api/department/getCategory?depid=" + $(this).val(),
                    success: function (data) {
                        $("#CategoryID").empty();
                        $("#CategoryID").append(`<option value>.....</option>`);
                        for (i = 0 ; i < data.length; i++) {
                            var elem = `<option value=${data[i].id}>${data[i].catName}</option>`;
                            $("#CategoryID").append(elem);
                        }
                    },
                    error: function () {
                        $("#CategoryID").empty();
                        $("#CategoryID").append(`<option value>Choose Category</option>`);
                    },
                });
            })
        })
    </script>    
    
}